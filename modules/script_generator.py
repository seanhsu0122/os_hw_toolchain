from google import genai
import os

def generate_answer(question: str) -> str:
    """
    Generate an answer to a question using the Google Gemini API.

    :param question: The user's input question
    :return: The answer generated by the Gemini model
    """
    # It's recommended to handle the API key securely, for example, via environment variables.
    # genai.configure(api_key=os.environ["GEMINI_API_KEY"])
    model = genai.GenerativeModel('gemini-1.5-flash')
    response = model.generate_content(question)
    return response.text.strip()

def answer_to_script(answer: str, question: str) -> str:
    """
    Convert the detailed answer into a conversational script suitable for a video presentation.
    The length of the script will be controlled to be between approximately 30 seconds and 1 minute.

    :param answer: The original answer generated by the LLM
    :param question: The user's original input question
    :return: The converted conversational script
    """
    # It's recommended to handle the API key securely, for example, via environment variables.
    # genai.configure(api_key=os.environ["GEMINI_API_KEY"])
    model = genai.GenerativeModel('gemini-1.5-flash')

    # --- MODIFIED PROMPT ---
    # The prompt is now more direct, with a clear instruction at the end
    # to ensure only the script text is generated as the output.
    prompt = f"""
    Based on the following question and answer, generate a conversational script for a video presentation.
    The script should be suitable for a general audience, use simple language, and be approximately 30 seconds to 1 minute long when spoken.

    Question:
    {question}

    Original answer:
    {answer}

    ---
    INSTRUCTIONS: Your output must be ONLY the raw script text. Do not include any titles, headings, speaker names (like 'Host:'), or scene descriptions (like 'Scenario:').
    """
    
    response = model.generate_content(prompt)
    return response.text.strip()

if __name__ == "__main__":
    # To run this script, make sure to set your GEMINI_API_KEY environment variable.
    # For example: export GEMINI_API_KEY="YOUR_API_KEY"
    try:
        genai.configure(api_key=os.environ["GEMINI_API_KEY"])
    except AttributeError:
         print("Error: The GEMINI_API_KEY environment variable is not set.")
         print("Please set your API key to run this script.")
         exit()


    # Test script generator
    print("--- Step 1: Generate Answer ---")
    question = "What is a quantum computer?\nAnd how is it different from a classical computer?"
    
    try:
        raw_answer = generate_answer(question)
        print(f"Original question: {question}")
        print("-" * 20)
        print("LLM Original Answer:")
        print(raw_answer)

        print("\n--- Step 2: Convert to Script ---")
        script = answer_to_script(raw_answer, question)
        print("-" * 20)
        print("Converted Script (Script only):")
        print(script)

    except Exception as e:
        print(f"An error occurred: {e}")